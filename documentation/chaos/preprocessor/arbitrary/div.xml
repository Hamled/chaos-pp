<?xml version="1.0" encoding="UTF-8"?>
<header name="chaos/preprocessor/arbitrary/div.h" author="Paul Mensonides" date="2003-2004">
<overview>
	The <self/> header defines an <link id="arbitrary-precision"/> division operator.
</overview>

<macro id="DIV_AP" group="division">
	<abstract>
		The <DIV_AP/> macro computes the quotient produced by dividing two <link id="arbitrary-precision values"/>.
	</abstract>
	<usage lang="C99">
		<syntax><DIV_AP/>(x, y)</syntax>
		<param id="x">
			The dividend.
		</param>
		<param id="y">
			The divisor.
		</param>
	</usage>
	<para>
		This macro expands to an <link id="arbitrary-precision value"/> that represents the quotient produced by dividing <var>x</var> by <var>y</var>.
		If <var>y</var> is an <link id="arbitrary-precision value"/> representing zero, this macro intentionally produces an error.
	</para>
	<para>
		This macro is a <link id="second-tier"/> algorithm that deduces the current <link id="recursion state"/> and invokes <DIV_AP_S/>.
		If the current <link id="recursion state"/> is already known, direct use of <DIV_AP_S/> is more efficient.
	</para>
	<para>
		This macro may not be used if <link id="bypass semantics"/> are in effect.
	</para>
	<listing>
		#include <chaos-preprocessor-arbitrary-demote.h/>
		#include <chaos-preprocessor-arbitrary-div.h/>
		#include <chaos-preprocessor-config.h/>
		
		#if <VARIADICS/>
		
		<DEMOTE_AP/>(<DIV_AP/>(
		    (1)(2)(3)(4),
		    (5)(0)
		))
		// 24
		
		#endif
	</listing>
	<derivative id="DIV_AP_ID" lang="C99"/>
	<derivative id="DIV_AP_" lang="C99"/>
	<derivative id="DIV_AP_S">
		<usage lang="C99">
			<syntax><DIV_AP_S/>(s, x, y)</syntax>
		</usage>
		<derivative id="DIV_AP_S_ID" lang="C99"/>
		<derivative id="DIV_AP_S_" lang="C99"/>
	</derivative>
</macro>

</header>
